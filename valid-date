#!/bin/bash
# valid-date – Проверяет дату с учетом правил определения високосных лет

normdate="укажите здесь имя файла, в котором вы сохранили сценарий normdate.sh"

exceedsDaysInMonth()
{
 # С учетом названия месяца и числа дней в этом месяце, данная функция
 # вернет: 0, если указанное число меньше или равно числу дней в месяце;
 # 1 -- в противном случае.

 case $(echo $1|tr '[:upper:]' '[:lower:]') in
  jan* ) days=31 ;; feb* ) days=28 ;;
  mar* ) days=31 ;; apr* ) days=30 ;;
  may* ) days=31 ;; jun* ) days=30 ;;
  jul* ) days=31 ;; aug* ) days=31 ;;
  sep* ) days=30 ;; oct* ) days=31 ;;
  nov* ) days=30 ;; dec* ) days=31 ;;
   * ) echo "$0: Unknown month name $1" >&2
    exit 1
 esac
 if [ $2 -lt 1 -o $2 -gt $days ] ; then
  return 1
 else
  return 0 # Число месяца допустимо.
 fi
}
isLeapYear()
{
 # Эта функция возвращает 0, если указанный год является високосным;
 # иначе возвращается 1.
 # Правила проверки високосного года:
 # 1. Если год не делится на 4, значит, он не високосный.
 # 2. Если год делится на 4 и на 400, значит, он високосный.
 # 3. Если год делится на 4, не делится на 400 и делится
 #  на 100, значит, он не високосный.
 # 4. Любой другой год, который делится на 4, является високосным.
 
 year=$1
 if [ "$((year % 4))" -ne 0 ] ; then
  return 1 # Nope, not a leap year.
 elif [ "$((year % 400))" -eq 0 ] ; then
  return 0 # Yes, it's a leap year.
 elif [ "$((year % 100))" -eq 0 ] ; then
  return 1
 else
  return 0
 fi
}

# Начало основного сценария
# =================

if [ $# -ne 3 ] ; then
 echo "Usage: $0 month day year" >&2
 echo "Typical input formats are August 3 1962 and 8 3 1962" >&2
 exit 1
fi

# Нормализовать дату и сохранить для проверки на ошибки.

newdate="$($normdate "$@")"
if [ $? -eq 1 ] ; then
 exit 1 # Error condition already reported by normdate
fi

# Разбить нормализованную дату, в которой
#  первое слово = месяц, второе слово = число месяца
#  третье слово = год.
month="$(echo $newdate | cut -d\ -f1)"
day="$(echo $newdate | cut -d\ -f2)"
year="$(echo $newdate | cut -d\ -f3)"

# После нормализации данных проверить допустимость
#  числа месяца (например, Jan 36 является недопустимой датой).
if ! exceedsDaysInMonth $month "$2" ; then
 if [ "$month" = "Feb" -a "$2" -eq "29" ] ; then
  if ! isLeapYear $3 ; then
   echo "$0: $3 is not a leap year, so Feb doesn't have 29 days." >&2
   exit 1
  fi
 else
  echo "$0: bad day value: $month doesn't have $2 days." >&2
  exit 1
 fi
fi
echo "Valid date: $newdate"
exit 0
