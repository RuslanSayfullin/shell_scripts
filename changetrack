#!/bin/bash

# changetrack -- проверяет страницу по указанному URL и, если она
# изменилась с момента последнего посещения, посылает новую страницу
# по указанному адресу электронной почты.

sendmail=$(which sendmail)
sitearchive="/tmp/changetrack"
tmpchanges="$sitearchive/changes.$$" # Временный файл
fromaddr="webscraper@intuitive.com"
dirperm=755    # чтение+запись+выполнение для владельца каталога
fileperm=644   # чтение+запись для владельца, только чтение для других

trap "$(which rm) -f $tmpchanges" 0 1 15 # Удалить временный файл при выходе.

if [ $# -ne 2 ] ; then
    echo "Usage: $(basename $0) url email" >&2
    echo " tip: to have changes displayed on screen, use email addr '-'" >&2
    exit 1
fi

if [ ! -d $sitearchive ] ; then
    if ! mkdir $sitearchive ; then
        echo "$(basename $0) failed: couldn't create $sitearchive." >&2
        exit 1
    fi
    chmod $dirperm $sitearchive
fi

if [ "$(echo $1 | cut -c1-5)" != "http:" ] ; then
    echo "Please use fully qualified URLs (e.g. start with 'http://')" >&2
    exit 1
fi

fname="$(echo $1 | sed 's/http:\/\///g' | tr '/?&' '...')"
baseurl="$(echo $1 | cut -d/ -f1-3)/"

# Загрузить копию веб-страницы и поместить в файл архива. Обратите
# внимание, что изменения определяются по чистому содержимому
# (используется флаг -dump, а не -source), поэтому можно не заниматься
# парсингом разметки HTML....

lynx -dump "$1" | uniq > $sitearchive/${fname}.new
if [ -f "$sitearchive/$fname" ] ; then
    # Этот сайт просматривался прежде, так что сравним старую и новую
    # копии с помощью diff.
    diff $sitearchive/$fname $sitearchive/${fname}.new > $tmpchanges
    if [ -s $tmpchanges ] ; then
        echo "Status: Site $1 has changed since our last check."
    else
        echo "Status: No changes for site $1 since last check."
        rm -f $sitearchive/${fname}.new # Ничего нового...
        exit 0    # Изменений нет, выйти.
    fi
else
    echo "Status: first visit to $1. Copy archived for future analysis."
    mv $sitearchive/${fname}.new $sitearchive/$fname
    chmod $fileperm $sitearchive/$fname
    exit 0
fi

# Сюда сценарий попадает, когда обнаружены изменения и нужно послать
# пользователю содержимое файла .new и заменить им старую копию
# для следующего вызова сценария.

if [ "$2" != "-" ] ; then
    ( echo "Content-type: text/html"
     echo "From: $fromaddr (Web Site Change Tracker)"
     echo "Subject: Web Site $1 Has Changed"
     echo "To: $2"
     echo ""
     lynx -s -dump $1 | \
     sed -e "s|src=\"|SRC=\"$baseurl|gi" \
         -e "s|href=\"|HREF=\"$baseurl|gi" \
         -e "s|$baseurl\/http:|http:|g"
    ) | $sendmail -t
else
    # Вывод различий на экран не кажется хорошим решением.
    # Сможете предложить что-то получше?

    diff $sitearchive/$fname $sitearchive/${fname}.new
fi

# Обновить сохраненную копию веб-сайта.
mv $sitearchive/${fname}.new $sitearchive/$fname
chmod 755 $sitearchive/$fname
exit 0

